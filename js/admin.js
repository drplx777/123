import { importFromGeoJSON } from './drawing.js';
import { state } from './mapInit.js';

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∞
 */
let isFileListLoaded = false;
let fileListLoadTimeout = null;
let fileListLoadCount = 0;
async function loadAdminFileList() {
    fileListLoadCount++;
    console.log(`–í—ã–∑–æ–≤ loadAdminFileList, –ø–æ–ø—ã—Ç–∫–∞ #${fileListLoadCount}`);
    if (isFileListLoaded) {
        console.log('–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å.');
        return;
    }
    if (fileListLoadTimeout) {
        console.log('–ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.');
        return;
    }
    fileListLoadTimeout = setTimeout(async () => {
        try {
            console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤...');
            const userResponse = await fetch('/user/info', {
                credentials: 'include',
                headers: {
                    'Accept': 'application/json'
                }
            });

            if (!userResponse.ok) {
                console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', userResponse.status, userResponse.statusText);
                throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ');
            }
            
            const user = await userResponse.json();
            console.log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', user);

            if (!user.isAdmin && !user.isTeacher && user.username !== 'admin') {
                console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ —É—á–∏—Ç–µ–ª–µ–º, –∑–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è.');
                return;
            }

            console.log('–ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
            const response = await fetch('/admin/files', {
                credentials: 'include',
                headers: {
                    'Accept': 'application/json'
                }
            });

            if (!response.ok) {
                const errorText = await response.text();
                console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∞:', response.status, errorText);
                throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤');
            }

            const files = await response.json();
            console.log('–ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∞:', files);
            const select = document.getElementById('admin-file-list');
            if (select) {
                select.innerHTML = '<option value="">Select user file...</option>';
                files.forEach(file => {
                    if (file.email && file.fileName) {
                        const option = document.createElement('option');
                        const fileValue = `${file.email}/${file.fileName}`;
                        option.value = fileValue;
                        option.textContent = `${file.email} - ${file.fileName} (${file.createdAt || 'No date'})`;
                        select.appendChild(option);
                        console.log('–î–æ–±–∞–≤–ª–µ–Ω —Ñ–∞–π–ª –≤ —Å–ø–∏—Å–æ–∫:', fileValue);
                    } else {
                        console.error('–ü—Ä–æ–ø—É—â–µ–Ω —Ñ–∞–π–ª —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:', file);
                    }
                });
                isFileListLoaded = true; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
            } else {
                console.error('–≠–ª–µ–º–µ–Ω—Ç admin-file-list –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DOM');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∞:', error);
            // –ù–µ –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –Ω–∞ UI, —á—Ç–æ–±—ã –Ω–µ –æ—Ç–≤–ª–µ–∫–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        } finally {
            fileListLoadTimeout = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
        }
    }, 100); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
 */
async function loadSelectedFile() {
    try {
        console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª" –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
        const filePath = document.getElementById('admin-file-list').value;
        if (!filePath) {
            console.error('–û—à–∏–±–∫–∞: –ù–µ –≤—ã–±—Ä–∞–Ω —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏');
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏.');
            return;
        }
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º:', filePath);
        console.log('–í—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ admin-file-list:', document.getElementById('admin-file-list').value);
        const parts = filePath.split('/');
        console.log('–†–∞–∑–±–∏–µ–Ω–∏–µ –ø—É—Ç–∏ –Ω–∞ —á–∞—Å—Ç–∏:', parts);
        if (parts.length !== 2 || !parts[0] || !parts[1]) {
            console.error('–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—É—Ç–∏ —Ñ–∞–π–ª–∞', filePath);
            alert('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—É—Ç–∏ —Ñ–∞–π–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–∞–π–ª –∏–∑ —Å–ø–∏—Å–∫–∞.');
            return;
        }
        const [username, fileName] = parts;
        const response = await fetch(`/admin/load/${username}/${fileName}`, {
            method: 'GET',
            credentials: 'include',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        });

        if (!response.ok) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º:', response.status, response.statusText);
            const errorText = await response.text();
            console.error('–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', errorText);
            alert(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ${response.status}. ${errorText}`);
            return;
        }

        const mapData = await response.json();
        console.log('–î–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º/—É—á–∏—Ç–µ–ª–µ–º:', mapData);
        
        // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –∫–∞—Ä—Ç–µ
        if (state && state.drawnItems) {
            state.drawnItems.clearLayers();
        }
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
        let geoJsonToImport = null;
        let hasQuestions = false;
        
        if (mapData && mapData.type === 'MapWithQuestions') {
            console.log('üìÅ –ê–¥–º–∏–Ω –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ —Å –∫–∞—Ä—Ç–æ–π –∏ –æ—Ç–≤–µ—Ç–∞–º–∏');
            geoJsonToImport = mapData.geojson;
            hasQuestions = mapData.questionsAnswers && Object.keys(mapData.questionsAnswers).length > 0;
            
            if (hasQuestions) {
                console.log('üìã –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:', mapData.questionsAnswers);
                // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤/—É—á–∏—Ç–µ–ª–µ–π
                showQuestionsForReview(mapData.questionsAnswers);
            }
        } else if (mapData && mapData.type === 'FeatureCollection') {
            console.log('üìÅ –ê–¥–º–∏–Ω –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª —Å—Ç–∞—Ä–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ (—Ç–æ–ª—å–∫–æ –∫–∞—Ä—Ç–∞)');
            geoJsonToImport = mapData;
        } else if (mapData && mapData.geojsonData && mapData.geojsonData.type === 'FeatureCollection') {
            console.log('üìÅ –ê–¥–º–∏–Ω –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª –æ—á–µ–Ω—å —Å—Ç–∞—Ä–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞');
            geoJsonToImport = mapData.geojsonData;
        } else {
            console.error('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞:', mapData);
            alert('–û—à–∏–±–∫–∞: –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞');
            return;
        }
        
        // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º GeoJSON –¥–∞–Ω–Ω—ã–µ
        if (geoJsonToImport && geoJsonToImport.type === 'FeatureCollection') {
            importFromGeoJSON(geoJsonToImport);
            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ –∫–∞—Ä—Ç—É');
            
            if (hasQuestions) {
                alert('–§–∞–π–ª —Å –∫–∞—Ä—Ç–æ–π –∏ –æ—Ç–≤–µ—Ç–∞–º–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!');
            } else {
                alert('–§–∞–π–ª —Å –∫–∞—Ä—Ç–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!');
            }
        } else {
            console.error('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ GeoJSON –¥–∞–Ω–Ω—ã–µ:', geoJsonToImport);
            alert('–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã –≤ —Ñ–∞–π–ª–µ');
        }
    } catch (error) {
        console.error('–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º:', error);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞.');
    }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
 */
async function deleteSelectedFile() {
    try {
        console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª"');
        const filePath = document.getElementById('admin-file-list').value;
        if (!filePath) {
            console.error('–û—à–∏–±–∫–∞: –ù–µ –≤—ã–±—Ä–∞–Ω —Ñ–∞–π–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.');
            return;
        }
        console.log('–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', filePath);
        const parts = filePath.split('/');
        if (parts.length !== 2 || !parts[0] || !parts[1]) {
            console.error('–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—É—Ç–∏ —Ñ–∞–π–ª–∞', filePath);
            alert('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—É—Ç–∏ —Ñ–∞–π–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–∞–π–ª –∏–∑ —Å–ø–∏—Å–∫–∞.');
            return;
        }
        const [username, fileName] = parts;
        if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª ${fileName} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${username}?`)) {
            const response = await fetch(`/admin/delete/${username}/${fileName}`, {
                method: 'DELETE',
                credentials: 'include',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) {
                console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', response.status, response.statusText);
                const errorText = await response.text();
                console.error('–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', errorText);
                alert(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞: ${response.status}. ${errorText}`);
                return;
            }

            const result = await response.json();
            console.log('–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω:', result);
            alert('–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!');
            loadAdminFileList(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
        } else {
            console.log('–£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
        }
    } catch (error) {
        console.error('–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:', error);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞.');
    }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
 */
async function deleteAllFiles() {
    try {
        console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã"');
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
            const response = await fetch('/admin/delete-all-files', {
                method: 'DELETE',
                credentials: 'include',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) {
                console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤:', response.status, response.statusText);
                const errorText = await response.text();
                console.error('–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', errorText);
                alert(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤: ${response.status}. ${errorText}`);
                return;
            }

            const result = await response.json();
            console.log('–í—Å–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã:', result);
            alert('–í—Å–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!');
            loadAdminFileList(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
        } else {
            console.log('–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
        }
    } catch (error) {
        console.error('–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤:', error);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤.');
    }
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–¥–º–∏–Ω–æ–º/—É—á–∏—Ç–µ–ª–µ–º
 */
function showQuestionsForReview(questionsAnswers) {
    console.log('üìã –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:', questionsAnswers);
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤
    let modal = document.getElementById('questions-review-modal');
    if (!modal) {
        modal = document.createElement('div');
        modal.id = 'questions-review-modal';
        modal.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            z-index: 10000;
            display: flex;
            align-items: center;
            justify-content: center;
        `;
        document.body.appendChild(modal);
    }
    
    const questions = [
        '–û–±—ä—è—Å–Ω–∏—Ç–µ –∏—Å—Ç–æ—Ä–∏—é –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —ç—Ç–∞–ø—ã —Ä–∞–∑–≤–∏—Ç–∏—è –≥–æ—Ä–æ–¥–∞.',
        '–ü—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–µ —Ä–æ–ª—å –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –∏ —Ä–µ—Å—É—Ä—Å–æ–≤ –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ –≥–æ—Ä–æ–¥–∞ –∏ –∂–∏–∑–Ω–∏ –≥–æ—Ä–æ–∂–∞–Ω.',
        '–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Å–æ—Ü–∏–∞–ª—å–Ω–æ-—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã —Ä–∞–∑–≤–∏—Ç–∏—è –≥–æ—Ä–æ–¥–∞.',
        '–î–∞–π—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É –Ω–∞—Å–µ–ª–µ–Ω–∏—é –∏ —Ç—Ä—É–¥–æ–≤—ã–º —Ä–µ—Å—É—Ä—Å–∞–º –≥–æ—Ä–æ–¥–∞.',
        '–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –Ω–∞—Ä–æ–¥–Ω–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≥–æ—Ä–æ–¥–∞.',
        '–ü—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–µ –≤–Ω—É—Ç—Ä–∏–≥–æ—Ä–æ–¥—Å–∫–æ–µ —Ä–∞—Å—Å–µ–ª–µ–Ω–∏–µ, –∏–ª–∏ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –≥–æ—Ä–æ–¥–∞.',
        '–û–ø–∏—à–∏—Ç–µ –≥–æ—Ä–æ–¥ –≤ —Å–∏—Å—Ç–µ–º–µ —Ä–∞—Å—Å–µ–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã –∫ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç.',
        '–û–ø–∏—à–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏ –µ–≥–æ –æ–∫—Ä—É–∂–∞—é—â—É—é —Å—Ä–µ–¥—É.',
        '–í—ã—è–≤–∏—Ç–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã —Ä–∞–∑–≤–∏—Ç–∏—è.'
    ];
    
    let content = `
        <div style="
            background: white;
            border-radius: 10px;
            padding: 30px;
            max-width: 800px;
            max-height: 80vh;
            overflow-y: auto;
            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
        ">
            <h2 style="margin-top: 0; color: #333; text-align: center;">üìã –û—Ç–≤–µ—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã</h2>
    `;
    
    for (let i = 1; i <= 9; i++) {
        const questionKey = `question${i}`;
        const answer = questionsAnswers[questionKey] || '–û—Ç–≤–µ—Ç –Ω–µ –¥–∞–Ω';
        const questionText = questions[i-1];
        
        content += `
            <div style="margin-bottom: 25px; padding: 15px; background: #f8f9fa; border-radius: 8px; border-left: 4px solid #007bff;">
                <h4 style="margin: 0 0 10px 0; color: #495057;">${i}. ${questionText}</h4>
                <div style="
                    padding: 12px;
                    background: white;
                    border-radius: 5px;
                    border: 1px solid #dee2e6;
                    min-height: 60px;
                    font-family: inherit;
                    line-height: 1.5;
                    color: ${answer === '–û—Ç–≤–µ—Ç –Ω–µ –¥–∞–Ω' ? '#6c757d' : '#212529'};
                    font-style: ${answer === '–û—Ç–≤–µ—Ç –Ω–µ –¥–∞–Ω' ? 'italic' : 'normal'};
                ">${answer}</div>
            </div>
        `;
    }
    
    content += `
            <div style="text-align: center; margin-top: 30px;">
                <button onclick="document.getElementById('questions-review-modal').style.display='none'" 
                        style="
                            padding: 12px 30px;
                            background: #007bff;
                            color: white;
                            border: none;
                            border-radius: 6px;
                            font-size: 16px;
                            cursor: pointer;
                        ">–ó–∞–∫—Ä—ã—Ç—å</button>
            </div>
        </div>
    `;
    
    modal.innerHTML = content;
    modal.style.display = 'flex';
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modal.onclick = (e) => {
        if (e.target === modal) {
            modal.style.display = 'none';
        }
    };
}

/**
 * –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–≤–µ—Ç–æ–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã
 */
async function viewSelectedFileAnswers() {
    try {
        console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–≤–µ—Ç–æ–≤"');
        const filePath = document.getElementById('admin-file-list').value;
        if (!filePath) {
            console.error('–û—à–∏–±–∫–∞: –ù–µ –≤—ã–±—Ä–∞–Ω —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤');
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤.');
            return;
        }
        
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤:', filePath);
        const parts = filePath.split('/');
        if (parts.length !== 2 || !parts[0] || !parts[1]) {
            console.error('–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—É—Ç–∏ —Ñ–∞–π–ª–∞', filePath);
            alert('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—É—Ç–∏ —Ñ–∞–π–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–∞–π–ª –∏–∑ —Å–ø–∏—Å–∫–∞.');
            return;
        }
        
        const [username, fileName] = parts;
        const response = await fetch(`/admin/load/${username}/${fileName}`, {
            method: 'GET',
            credentials: 'include',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        });

        if (!response.ok) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤:', response.status, response.statusText);
            const errorText = await response.text();
            console.error('–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', errorText);
            alert(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ${response.status}. ${errorText}`);
            return;
        }

        const fileData = await response.json();
        console.log('–î–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤:', fileData);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç—ã
        if (fileData && fileData.type === 'MapWithQuestions') {
            if (fileData.questionsAnswers && Object.keys(fileData.questionsAnswers).length > 0) {
                console.log('üìã –ù–∞–π–¥–µ–Ω—ã –æ—Ç–≤–µ—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö');
                showQuestionsForReview(fileData.questionsAnswers);
            } else {
                alert('–í —ç—Ç–æ–º —Ñ–∞–π–ª–µ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã.');
            }
        } else {
            alert('–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã (—Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞).');
        }
        
    } catch (error) {
        console.error('–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –æ—Ç–≤–µ—Ç–æ–≤:', error);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç–≤–µ—Ç–æ–≤.');
    }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
 */
function initAdmin() {
    document.addEventListener('authSuccess', () => {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        loadAdminFileList();
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    const loadButton = document.getElementById('admin-load-file');
    if (loadButton) {
        loadButton.addEventListener('click', loadSelectedFile);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤
    const viewAnswersButton = document.getElementById('admin-view-answers');
    if (viewAnswersButton) {
        viewAnswersButton.addEventListener('click', viewSelectedFileAnswers);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
    try {
        const deleteButton = document.getElementById('admin-delete-file');
        if (deleteButton) {
            deleteButton.addEventListener('click', deleteSelectedFile);
            console.log('–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω');
        } else {
            console.error('–ö–Ω–æ–ø–∫–∞ admin-delete-file –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ DOM');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è:', error);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
    try {
        const deleteAllButton = document.getElementById('admin-delete-all-files');
        if (deleteAllButton) {
            deleteAllButton.addEventListener('click', deleteAllFiles);
            console.log('–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω');
        } else {
            console.error('–ö–Ω–æ–ø–∫–∞ admin-delete-all-files –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ DOM');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤:', error);
    }
}

export { initAdmin }; 