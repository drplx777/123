/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–∞—Ä—Ç—É Leaflet –∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.
 * @module mapInit
 */
import { loadMapData } from './api.js';
import { importFromGeoJSON } from './drawing.js';

/**
 * –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–∞—Ä—Ç—ã.
 * @typedef {Object} MapState
 * @property {L.Map|null} map - –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–∞—Ä—Ç—ã Leaflet.
 * @property {L.FeatureGroup} drawnItems - –ì—Ä—É–ø–ø–∞ –¥–ª—è –Ω–∞—Ä–∏—Å–æ–≤–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤.
 * @property {string|null} currentTool - –ê–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç (marker, line, polygon, delete).
 * @property {L.Layer|null} selectedLayer - –¢–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–ª–æ–π.
 * @property {L.Marker|null} searchMarker - –ú–∞—Ä–∫–µ—Ä –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞.
 * @property {L.Layer|null} tempLayer - –í—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ª–æ–π –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è.
 * @property {L.LatLng[]} tempPoints - –¢–æ—á–∫–∏ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ª–∏–Ω–∏–π/–ø–æ–ª–∏–≥–æ–Ω–æ–≤.
 */

/** @type {MapState} */
const state = {
  map: null,
  drawnItems: null,
  currentTool: null,
  selectedLayer: null,
  searchMarker: null,
  tempLayer: null,
  tempPoints: [],
};

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏–∫–æ–Ω–∫–∏ –º–∞—Ä–∫–µ—Ä–æ–≤ Leaflet.
 */
function configureMarkerIcons() {
  // –°–æ–∑–¥–∞–µ–º HTML-–º–∞—Ä–∫–µ—Ä —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —ç–º–æ–¥–∑–∏
  const DefaultIcon = L.divIcon({
    html: 'üìç',
    className: 'custom-div-icon',
    iconSize: [30, 30],
    iconAnchor: [15, 30],
    popupAnchor: [0, -30]
  });

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∫–æ–Ω–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –≤—Å–µ—Ö –º–∞—Ä–∫–µ—Ä–æ–≤
  L.Marker.prototype.options.icon = DefaultIcon;

  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –º–∞—Ä–∫–µ—Ä–∞
  const style = document.createElement('style');
  style.textContent = `
    .custom-div-icon {
      background: none;
      border: none;
      font-size: 24px;
      text-align: center;
      line-height: 30px;
    }
  `;
  document.head.appendChild(style);

  return Promise.resolve();
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–∞—Ä—Ç—É Leaflet —Å —Ä–µ—Ç—Ä–∞—è–º–∏.
 * @param {number} [retries=3] - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫.
 * @param {number} [delay=500] - –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏ –≤ –º—Å.
 * @returns {Promise<void>}
 */
async function initMap(retries = 3, delay = 500) {
  let attempt = 1;

  while (attempt <= retries) {
    try {
      console.log(`–ü–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã (–ü–æ–ø—ã—Ç–∫–∞ ${attempt}/${retries})`);

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Leaflet
      if (typeof L === 'undefined') {
        throw new Error('Leaflet –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ Leaflet.');
      }

      // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–∫–æ–Ω–æ–∫ –º–∞—Ä–∫–µ—Ä–æ–≤
      configureMarkerIcons();

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∫–∞—Ä—Ç—ã
      const mapContainer = document.getElementById('map');
      if (!mapContainer) {
        throw new Error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç—ã (#map) –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DOM');
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
      const rect = mapContainer.getBoundingClientRect();
      if (rect.width === 0 || rect.height === 0) {
        console.warn('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç—ã –∏–º–µ–µ—Ç –Ω—É–ª–µ–≤—ã–µ —Ä–∞–∑–º–µ—Ä—ã. –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–∏—Ç—å.');
        mapContainer.style.width = '100vw';
        mapContainer.style.height = '100vh';
      }

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã
      state.map = L.map('map', {
        center: [53.757, 87.134],
        zoom: 13,
        zoomControl: true,
      });

      // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ—è —Ç–∞–π–ª–æ–≤ OpenStreetMap
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '¬© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>',
        maxZoom: 19,
      }).addTo(state.map);

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª–æ—è –Ω–∞—Ä–∏—Å–æ–≤–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
      state.drawnItems = new L.FeatureGroup();
      state.map.addLayer(state.drawnItems);

      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã
      console.log('–ö–∞—Ä—Ç–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ...');
      setTimeout(() => {
        if (state.map) {
          state.map.invalidateSize();
          console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–æ');
          // –ü—Ä–æ–≤–µ—Ä–∫–∞, –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç—ã
          const mapContainerCheck = document.getElementById('map-container');
          if (mapContainerCheck) {
            console.log('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä map-container –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è display:', mapContainerCheck.style.display);
            if (mapContainerCheck.style.display === 'none') {
              console.warn('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä map-container —Å–∫—Ä—ã—Ç (display: none), —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π –ø—Ä–æ–±–ª–µ–º —Å UI');
            }
          } else {
            console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä map-container –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DOM');
          }
        }
      }, 100);

      // –£—Å–ø–µ—Ö
      console.log('–ö–∞—Ä—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
      return;
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã (–ü–æ–ø—ã—Ç–∫–∞ ${attempt}/${retries}):`, error);
      if (attempt === retries) {
        console.error('–í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å. –ö–∞—Ä—Ç–∞ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞.');
        document.getElementById('error-message').textContent = '–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å.';
        return;
      }
      // –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
      await new Promise((resolve) => setTimeout(resolve, delay));
      attempt++;
    }
  }
}

export { state, initMap };